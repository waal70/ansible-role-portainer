---
- name: "First task to fool vscode"
  ansible.builtin.debug:
    msg: "Bogus"

- name: Deploy Portainer to {{ inventory_hostname }} # noqa: args[module]
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: "{{ container_image }}"
    labels: "{{ container_labels | default(omit) }}"
    state: started
    detach: true
    recreate: "{{ container_recreate }}"
    restart_policy: "{{ container_restart_policy }}"
    links: "{{ container_links | default(omit) }}"
    networks: "{{ container_network | default(omit, True) }}"
    networks_cli_compatible: false # avoid ansible 2.12. Deprecation warning
    image_name_mismatch: "recreate"
    published_ports: "{{ container_ports | default(omit, True) }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ persistent_data_path }}"
  register: portainer_docker_deploy
  when: container_recreate or not portainer_docker.container.State.Running

- name: "Swap over variable when deploy has taken place"
  ansible.builtin.set_fact:
    portainer_docker: "{{ portainer_docker_deploy }}"
  when: portainer_docker_deploy.skipped is not defined

- name: "Ensure presence of cifs-utils for volume mappings"
  ansible.builtin.package:
    name: cifs-utils
    state: present

- name: "Ensure the shared network 'reverse-proxy' exists to enable reverse proxying"
  community.docker.docker_network:
    name: reverse-proxy
    driver: bridge
    enable_ipv6: true
    state: present
    validate_certs: false

- name: Set fact for container state
  ansible.builtin.set_fact:
    portainer_is_running: portainer_docker.container.State.Running

- name: Set fact for network address
  ansible.builtin.set_fact:
    portainer_endpoint: https://{{ portainer_docker.container.NetworkSettings.IPAddress }}:{{ host_port }}/api

- name: Check container status
  ansible.builtin.fail:
    msg: "Portainer did not start: {{ portainer_is_running }}"
  when: not portainer_is_running

- name: Wait for Portainer web interface to get available
  ansible.builtin.uri:
    url: https://{{ portainer_docker.container.NetworkSettings.IPAddress }}:{{ host_port }}
    method: GET
    validate_certs: false
  register: wait_portainer_result
  until: wait_portainer_result is succeeded
  retries: 10
  delay: 3
  changed_when: false
