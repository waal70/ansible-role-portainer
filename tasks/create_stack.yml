---
- name: "Get stack information from Portainer for {{ stack_name }}"
  ansible.builtin.uri:
    url: "{{ portainer_endpoint }}/stacks"
    method: GET
    headers:
      Authorization: "Bearer {{ jwt_token }}"
    validate_certs: false
  register: get_stack_response
  when: jwt_token is defined

- name: "Check if the stack already exists - {{ stack_name }}"
  ansible.builtin.set_fact:
    stack_not_exists: "{{ response_data | json_query('[?Name == `' + stack_name + '`]') | length <= 0 }}"
    existing_stack_id: "{{ response_data | json_query('[?Name == `' + stack_name + '`].Id') | default('[0]') }}"
  vars:
    response_data: "{{ get_stack_response.json }}"

- name: Debug existing stack id
  ansible.builtin.debug:
    msg: "Existing id for stack {{ stack_name }} = {{ existing_stack_id | first | default('Stack not found') }}"

- name: "Create a stack in Portainer by the name of {{ stack_name }}"
  ansible.builtin.uri:
    url: "{{ portainer_endpoint }}/stacks/create/standalone/string?endpointId={{ endpoint_id }}"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ jwt_token }}"
    body_format: json
    body:
      name: "{{ stack_name }}"
      fromAppTemplate: false
      stackFileContent: "{{ stack_compose }}"
    validate_certs: false
    timeout: 300 # Some stack creation can be quite time-consuming
  register: create_stack_response
  when: jwt_token is defined and (stack_not_exists | bool)

- name: "Update a stack in Portainer by the name of {{ stack_name }}"
  ansible.builtin.uri:
    url: "{{ portainer_endpoint }}/stacks/{{ existing_stack_id | first }}?endpointId={{ endpoint_id }}"
    method: PUT
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ jwt_token }}"
    body_format: json
    body:
      prune: false
      pullImage: false
      stackFileContent: "{{ stack_compose }}"
    validate_certs: false
    timeout: 300 # Some stack creation can be quite time-consuming
  when: (jwt_token is defined) and ( existing_stack_id != '0') and not ( stack_not_exists | bool ) and ( stack_update | bool)

- name: "Check stack creation response for {{ stack_name }}"
  ansible.builtin.fail:
    msg: "Failed to create stack in Portainer"
  when: stack_not_exists and create_stack_response.status != 200

- name: Block for post stack creation
  when: post_create_handler != ''
  block:
    - name: "Register post-creation activities"
      ansible.builtin.import_tasks: "{{ post_create_handler or '../handlers/dummy_handler.yml' }}"
